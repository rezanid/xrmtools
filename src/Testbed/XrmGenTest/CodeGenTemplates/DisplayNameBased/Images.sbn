{{~for image in step.images~}}
{{codegen_attribute}}
[EntityLogicalName("{{step.primary_entity_metadata.logical_name}}")]
public class {{image.name}}{{step.primary_entity_metadata.display_name.localized_labels[0].label | tokenize}} : Entity
{
	public const string EntityLogicalName = "{{step.primary_entity_metadata.logical_name}}";
	public partial class Fields
	{
	{{~for attribute in image.message_property_metadata.attributes~}}
		{{~localized_name = attribute | safe_display_name step.primary_entity_metadata.attributes~}}
		public const string {{localized_name}} = "{{attribute.logical_name}}";
	{{~end~}}
	}

{{~for attribute in image.message_property_metadata.attributes~}}
    {{# Send the attribute along with the full list of attributes in case template needs it.}}
	{{include attribute.attribute_type + '.sbncs' attribute step.primary_entity_metadata.attributes}}
	
	{{~localized_label = attribute.display_name?.localized_labels | array.first~}}
	
	[AttributeLogicalName("{{attribute.logical_name}}")]
	/// <summary>
	/// Description: {{attribute.description?.localized_labels | array.first}}
	/// </summary>	
	{{~case attribute.attribute_type~}}
	{{~when 'Integer'~}}
	public int? {{localized_label?.label | tokenize}}
	{
		get => TryGetAttributeValue("{{attribute.logical_name}}", out int value) ? value : null;
	}
	{{~when 'Boolean'~}}
	public bool? {{localized_label?.label | tokenize}}
	{
		get => TryGetAttributeValue("{{attribute.logical_name}}", out bool value) ? value : null;
	}
	{{~when 'Decimal'~}}
	public decimal? {{localized_label?.label | tokenize}}
	{
		get => TryGetAttributeValue("{{attribute.logical_name}}", out decimal value) ? value : null;
	}
	{{~when 'DateTime'~}}
	public DateTime? {{localized_label?.label | tokenize}}
	{
		get => TryGetAttributeValue("{{attribute.logical_name}}", out DateTime value) ? value : null;
	}
	{{~when 'Memo', 'String'~}}
	public string {{localized_label?.label | tokenize}}
	{
		get => TryGetAttributeValue("{{attribute.logical_name}}", out string value) ? value : null;
	}
	{{~when 'Picklist','State','Status'~}}
	public string {{localized_label?.label | tokenize}}
	{
		get => TryGetAttributeValue("{{attribute.logical_name}}", out OptionSetValue opt) && opt != null ? ({{enum_name}})Enum.ToObject(typeof({{enum_name}}), opt.Value) : null;
	}
	[AttributeLogicalName("{{attribute.logical_name}}name")]
	public string {{attribute.display_name.localized_labels[0].label | tokenize}}Name
	{
		get => FormattedValues.Contains("{{attribute.logical_name}}") ? FormattedValues["{{attribute.logical_name}}"] : null;
	}
	{{# Here Virtual can only be MultiSelectPicklist since we already filtered logical fields.}}
	{{~when 'Virtual'~}}
	{{~enum_type = attribute.option_set.display_name.localized_labels[0].label | tokenize}}
	public IEnumerable<{{enum_type}}> {{attribute | safe_display_name attributes}}
	{
		get => TryGetAttributeValue("{{attribute.logical_name}}", out OptionSetValueCollection opts) && opts != null ? opts.Select(opt => ({{enum_type}})Enum.ToObject(typeof({{enum_type}}), opt.Value)) : [];
	}
	{{~when 'Lookup'~}}
	public string {{localized_label?.label | tokenize}}
	{
		get => TryGetAttributeValue("{{attribute.logical_name}}", out EntityReference value) ? value : null;
	}
	{{~end~}}
{{~end~}}
}
{{~end~}}